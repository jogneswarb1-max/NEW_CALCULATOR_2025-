name: Android Build (bundle)

on:
  workflow_dispatch: {}
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Decode keystore
        if: ${{ secrets.KEYSTORE_BASE64 != '' }}
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > calcx.keystore

      - name: Grant execute to gradlew
        run: chmod +x ./gradlew

      - name: Build bundle
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
        run: ./gradlew clean bundleRelease --no-daemon

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: calcx-aab
          path: app/build/outputs/**/*.aab

          base64 -w 0 calcx-release.keystore > keystore.b64    # Linux / macOS
# Windows (PowerShell)
[Convert]::ToBase64String([IO.File]::ReadAllBytes("calcx-release.keystore")) > keystore.b64

NEW_CALCULATOR_2025/
│
├── .github/
│   └── workflows/
│       └── android-build.yml      # GitHub Actions workflow (APK/AAB build)
│
├── app/                           # Android Studio / AIDE Gradle project files
│   ├── src/
│   │   └── main/
│   │       ├── AndroidManifest.xml
│   │       ├── java/com/jogneswar/calculator/MainActivity.java
│   │       └── res/
│   │           ├── layout/activity_main.xml
│   │           ├── values/strings.xml
│   │           └── mipmap/ic_launcher.png
│   └── build.gradle
│
├── build.gradle
├── settings.gradle
├── README.md
├── NEW_CALCULATOR_2025.aia        # Kodular project (direct import)
└── NEW_CALCULATOR_2025.apk        # unsigned sample APK (placeholder)

package com.jogneswar.calculator;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {
    EditText display;
    String input = "";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        display = findViewById(R.id.display);

        int[] btns = { R.id.btn0, R.id.btn1, R.id.btn2, R.id.btn3, R.id.btn4,
                       R.id.btn5, R.id.btn6, R.id.btn7, R.id.btn8, R.id.btn9,
                       R.id.btnPlus, R.id.btnMinus, R.id.btnMul, R.id.btnDiv,
                       R.id.btnClear, R.id.btnEqual };

        for (int id : btns) {
            Button b = findViewById(id);
            b.setOnClickListener(this::onClick);
        }
    }

    public void onClick(View v) {
        Button b = (Button) v;
        String txt = b.getText().toString();

        switch (txt) {
            case "C":
                input = "";
                break;
            case "=":
                try {
                    input = String.valueOf(eval(input));
                } catch (Exception e) {
                    input = "Error";
                }
                break;
            default:
                input += txt;
        }
        display.setText(input);
    }

    // Simple math evaluator
    public static double eval(final String str) {
        return new Object() {
            int pos = -1, ch;
            void nextChar() { ch = (++pos < str.length()) ? str.charAt(pos) : -1; }
            boolean eat(int charToEat) {
                while (ch == ' ') nextChar();
                if (ch == charToEat) { nextChar(); return true; }
                return false;
            }
            double parse() {
                nextChar();
                double x = parseExpression();
                if (pos < str.length()) throw new RuntimeException("Unexpected: " + (char)ch);
                return x;
            }
            double parseExpression() {
                double x = parseTerm();
                for (;;) {
                    if      (eat('+')) x += parseTerm();
                    else if (eat('-')) x -= parseTerm();
                    else return x;
                }
            }
            double parseTerm() {
                double x = parseFactor();
                for (;;) {
                    if      (eat('*')) x *= parseFactor();
                    else if (eat('/')) x /= parseFactor();
                    else return x;
                }
            }
            double parseFactor() {
                if (eat('+')) return parseFactor();
                if (eat('-')) return -parseFactor();

                double x;
                int startPos = this.pos;
                if (eat('(')) {
                    x = parseExpression();
                    eat(')');
                } else if ((ch >= '0' && ch <= '9') || ch == '.') {
                    while ((ch >= '0' && ch <= '9') || ch == '.') nextChar();
                    x = Double.parseDouble(str.substring(startPos, this.pos));
                } else {
                    throw new RuntimeException("Unexpected: " + (char)ch);
                }
                return x;
            }
        }.parse();
    }
}
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical" android:layout_width="match_parent"
    android:layout_height="match_parent" android:padding="16dp">

    <EditText
        android:id="@+id/display"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="24sp"
        android:inputType="none"
        android:focusable="false"/>

    <GridLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:columnCount="4"
        android:rowCount="5"
        android:layout_marginTop="20dp">

        <Button android:id="@+id/btn7" android:text="7" />
        <Button android:id="@+id/btn8" android:text="8" />
        <Button android:id="@+id/btn9" android:text="9" />
        <Button android:id="@+id/btnDiv" android:text="/" />

        <Button android:id="@+id/btn4" android:text="4" />
        <Button android:id="@+id/btn5" android:text="5" />
        <Button android:id="@+id/btn6" android:text="6" />
        <Button android:id="@+id/btnMul" android:text="*" />

        <Button android:id="@+id/btn1" android:text="1" />
        <Button android:id="@+id/btn2" android:text="2" />
        <Button android:id="@+id/btn3" android:text="3" />
        <Button android:id="@+id/btnMinus" android:text="-" />

        <Button android:id="@+id/btn0" android:text="0" />
        <Button android:id="@+id/btnClear" android:text="C" />
        <Button android:id="@+id/btnEqual" android:text="=" />
        <Button android:id="@+id/btnPlus" android:text="+" />

    </GridLayout>
</LinearLayout>

name: Android Build

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
      - run: chmod +x gradlew
      - run: ./gradlew assembleDebug
      - uses: actions/upload-artifact@v4
        with:
          name: calculator-apk
          path: app/build/outputs/apk/debug/*.apk
